node('docker') {

    stage('Git checkout') {
        git branch: 'master', credentialsId: 'gihub-key', url: 'git@github.com:stuartshay/ImageGallery.Client.git'
    }

   stage('Build UI Selenium Test Project') {
           sh '''mv docker/imagegallery-client-selenium.dockerfile/.dockerignore .dockerignore
           docker build -f docker/imagegallery-client-selenium.dockerfile/Dockerfile --build-arg BUILD_NUMBER=${BUILD_NUMBER} -t stuartshay/imagegallery-client:2.0.0-test-ui .'''
           withCredentials([usernamePassword(credentialsId: 'docker-hub-navigatordatastore', usernameVariable: 'DOCKER_HUB_LOGIN', passwordVariable: 'DOCKER_HUB_PASSWORD')]) {
                sh "docker login -u ${DOCKER_HUB_LOGIN} -p ${DOCKER_HUB_PASSWORD}"
           }
          sh '''docker push stuartshay/imagegallery-client:2.0.0-test-ui'''
    }


    stage("Run Unit Test") {
        sh 'sudo rm -rf /home/jenkins/artifacts/imagegallery-client-selenium/test test'
        ansiColor('xterm') {
              sh "docker-compose -f docker/imagegallery-client-selenium.dockerfile/intergration-test-compose.yml pull"
              sh "docker-compose -f docker/imagegallery-client-selenium.dockerfile/intergration-test-compose.yml down -v"
        }
        try {
              sh "docker-compose -f docker/imagegallery-client-selenium.dockerfile/intergration-test-compose.yml up --force-recreate --abort-on-container-exit"
        } finally {
              sh "docker-compose -f docker/imagegallery-client-selenium.dockerfile/intergration-test-compose.yml down -v"
       }
       sh 'mkdir -p test data'
       sh  '''sudo cp /home/jenkins/artifacts/imagegallery-client-selenium/test/*.xml test
              sudo cp /home/jenkins/artifacts/imagegallery-client-selenium/data/*.png data
           '''
       step([$class: 'XUnitBuilder',
                        thresholds: [[$class: 'FailedThreshold', unstableThreshold: '1']],
                        tools: [[$class: 'XUnitDotNetTestType', pattern: 'test/*.xml']]])
        archiveArtifacts 'test/*.xml, data/*.png'
   }


    stage('Mail') {
        emailext attachLog: true, body: '', subject: "Jenkins build status - ${currentBuild.fullDisplayName}", to: 'sshay@yahoo.com'
    }

}
