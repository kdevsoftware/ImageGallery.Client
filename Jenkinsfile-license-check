node('master') {
    
    stage('Git checkout') {
        git branch: 'Auth', credentialsId: 'gihub-key', url: 'git@github.com:stuartshay/ImageGallery.Client.git'
    }
    
    stage('License Check') {
        docker.image('node:9.3').inside  {
            sh "npm install -g license-checker"
            sh "rm -rf licenses.json licenses.html"
            sh "cd src/ImageGallery.Client && npm install && license-checker --json > licenses.json"
            def license = readFile('src/ImageGallery.Client/licenses.json')
            
            sh """cat <<EOF >licenses.html
<html>

<head>
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <style>
        #licenseReport {
            font-family: "Trebuchet MS", Arial, Helvetica, sans-serif;
            border-collapse: collapse;
            width: 100%;
        }

        #licenseReport td,
        #licenseReport th {
            border: 1px solid #ddd;
            padding: 8px;
        }

        #licenseReport tr:nth-child(even) {
            background-color: #f2f2f2;
        }

        #licenseReport tr:hover {
            background-color: #ddd;
        }

        #licenseReport th {
            padding-top: 12px;
            padding-bottom: 12px;
            text-align: left;
            background-color: #37a1c1;
            color: white;
        }
    </style>
</head>

<body>
    <h2>License Report</h2>

    <table id="licenseReport">
    </table>

    <script>
        fetch("licenses.json")
            .then(response => response.json())
            .then(json => makeReport(json));

        function makeReport(dataReport){
            var packageNames = [];
            var htmlReport = '<tr>' +
                '<th>Package Name</th>' +
                '<th>Licenses</th>' +
                '<th>Repository</th>' +
                '<th>Publisher</th>'
            '</tr>';

            for (var key in dataReport) {
                if (!dataReport.hasOwnProperty(key)) continue;

                var packageName = key.slice(0, key.lastIndexOf("@"));
                if (packageNames.includes(packageName)) continue;

                packageNames.push(packageName);
                var obj = dataReport[key];
                var publisher = obj.email ?  obj.publisher + ' (' + obj.email + ') ' : obj.publisher;
                htmlReport += ' <tr>' +
                    '<td>' + packageName + '</td>' +
                    '<td>' + obj.licenses + '</td>' +
                    '<td>' + obj.repository + '</td>' +
                    '<td>' + publisher + '</td>' +
                    '</tr>';
            }

            var licenseReport = document.getElementById("licenseReport");
            licenseReport.innerHTML = htmlReport;
        }
        
    </script>

</body>

</html>
EOF"""
        }
    }
    
    stage('Publish') {
        archiveArtifacts '**/licenses.json, **/licenses.html'
        publishHTML([allowMissing: false, alwaysLinkToLastBuild: true, keepAll: false, reportDir: '', reportFiles: 'licenses.html', reportName: 'License Check Report', reportTitles: ''])

    }
}
